import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { PeopleList, TweetItem } from '../types-interfaces/types';
import {
    // AppThunk, 
    RootState
} from './store';

const initialState: {
    tweets: TweetItem[],
    people: PeopleList[]
} = {
    tweets: [],
    people: []
};

export const tweetItemSlice = createSlice({
    name: 'tweetList',
    initialState: initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        addTweet: (state, action: PayloadAction<TweetItem>) => {
            state.tweets.push(action.payload)
        },
        clearAllTweet: (state) => { state.tweets = [] },
        deleteSpecificTweet: (state, action: PayloadAction<TweetItem>) => {
            state.tweets = state.tweets.filter((tweet) => tweet.id !== action.payload.id)
        },
        likeUpdate: (state, action: PayloadAction<number>) => {
            state.tweets[action.payload].isLiked = true
        },

    },
    // // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // // including actions generated by createAsyncThunk or in other slices.
    // extraReducers: (builder) => {
    //     builder
    //         .addCase(incrementAsync.pending, (state) => {
    //             state.status = 'loading';
    //         })
    //         .addCase(incrementAsync.fulfilled, (state, action) => {
    //             state.status = 'idle';
    //             state.value += action.payload;
    //         })
    //         .addCase(incrementAsync.rejected, (state) => {
    //             state.status = 'failed';
    //         });
    // },
});

export const { clearAllTweet, addTweet, deleteSpecificTweet, likeUpdate } = tweetItemSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const tweets = (state: RootState) => state.twitter.tweets;
export const people = (state: RootState) => state.twitter.people;


export default tweetItemSlice.reducer;
